function val = value_cal(x,y,mode,alpha,gamma)
    right_shift = abs(x - circshift(x,[0,1]));
    left_shift = abs(x - circshift(x,[0,-1])); 
    up_shift = abs(x - circshift(x,[1,0])); 
    down_shift = abs(x - circshift(x,[-1,0]));
    
    if(strcmp(mode,'quad') == 1)  
        val = (1 - alpha)*sum(sum(abs(y - x).^2)) + alpha*sum(sum(right_shift.^2 + left_shift.^2 + up_shift.^2 + down_shift.^2));
    end
    
    if(strcmp(mode,'huber') == 1) 
        val = (1 - alpha)*sum(sum(abs(y - x).^2)) + alpha*sum(sum((right_shift <= gamma).*(0.5*(right_shift.^2))...
                 + (left_shift <= gamma).*(0.5*(left_shift.^2))...
                 + (up_shift <= gamma).*(0.5*(up_shift.^2))...
                 + (down_shift <= gamma).*(0.5*(down_shift.^2))...
                 + (down_shift > gamma).*(gamma*(down_shift - 0.5*gamma))...
                 + (up_shift > gamma).*(gamma*(up_shift - 0.5*gamma))...
                 + (left_shift > gamma).*(gamma*(left_shift - 0.5*gamma))...
                 + (right_shift > gamma).*(gamma*(right_shift - 0.5*gamma))));
    end
    
    if(strcmp(mode,'adaptive') == 1)
        val = (1 - alpha)*sum(sum(abs(y - x).^2)) + alpha*sum(sum(gamma*(right_shift + left_shift...
            + up_shift + down_shift - gamma*log(1 + right_shift/gamma)...
            - gamma*log(1 + left_shift/gamma) - gamma*log(1 + up_shift/gamma)...
            - gamma*log(1 + down_shift/gamma))));
    end
end

