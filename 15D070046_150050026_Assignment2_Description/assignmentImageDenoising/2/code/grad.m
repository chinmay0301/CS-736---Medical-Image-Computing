function grad_x = grad(x,y,mode,alpha,gamma)
    right_shift = x - circshift(x,[0,1]);
    left_shift = x - circshift(x,[0,-1]); 
    up_shift = x - circshift(x,[1,0]); 
    down_shift = x - circshift(x,[-1,0]);
    
    if(strcmp(mode,'quad') == 1)
        grad_x = 2*(1-alpha)*(x-y) + 2*alpha*(right_shift + left_shift + up_shift + down_shift);
    end
    
    if(strcmp(mode,'huber') == 1)
        grad_x = 2*(1-alpha)*(x-y) + alpha*((abs(right_shift) <= gamma).*right_shift...
                 + (abs(left_shift) <= gamma).*left_shift...
                 + (abs(up_shift) <= gamma).*up_shift... 
                 + (abs(down_shift) <= gamma).*down_shift...
                 + (abs(down_shift) > gamma).*gamma.*sign(down_shift)...
                 + (abs(up_shift) > gamma).*gamma.*sign(up_shift)...
                 + (abs(left_shift) > gamma).*gamma.*sign(left_shift)...
                 + (abs(right_shift) > gamma).*gamma.*sign(right_shift));
            
    end
    
    if(strcmp(mode,'adaptive') == 1)
        grad_x = 2*(1-alpha)*(x-y) + sign(right_shift).*(gamma./(1 + abs(right_shift)/gamma) + gamma)...
                 + sign(left_shift).*(gamma./(1 + abs(left_shift)/gamma) + gamma)...
                 + sign(up_shift).*(gamma./(1 + abs(up_shift)/gamma) + gamma)...
                 + sign(down_shift).*(gamma./(1 + abs(down_shift)/gamma) + gamma);
    end
end
    

